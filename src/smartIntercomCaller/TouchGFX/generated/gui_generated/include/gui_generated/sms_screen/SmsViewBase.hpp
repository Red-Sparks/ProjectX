/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef SMSVIEWBASE_HPP
#define SMSVIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/sms_screen/SmsPresenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/widgets/Image.hpp>
#include <touchgfx/containers/Container.hpp>
#include <touchgfx/containers/clock/DigitalClock.hpp>
#include <touchgfx/widgets/TextArea.hpp>
#include <touchgfx/widgets/ButtonWithIcon.hpp>
#include <touchgfx/widgets/BoxWithBorder.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>
#include <touchgfx/containers/buttons/Buttons.hpp>
#include <touchgfx/widgets/Button.hpp>

class SmsViewBase : public touchgfx::View<SmsPresenter>
{
public:
    SmsViewBase();
    virtual ~SmsViewBase() {}
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box __background;
    touchgfx::Image background;
    touchgfx::Container header;
    touchgfx::Box headerBackground;
    touchgfx::DigitalClock clock;
    touchgfx::TextArea nameOfPage;
    touchgfx::Container forSms;
    touchgfx::ButtonWithIcon buttonSend;
    touchgfx::BoxWithBorder backgroundForSms;
    touchgfx::TextAreaWithOneWildcard areaForSms;
    touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger > flexForSms;
    touchgfx::TextArea textSms;
    touchgfx::Container forReceiver;
    touchgfx::TextAreaWithOneWildcard areaForReceiver;
    touchgfx::BoxWithBorder backgroundForNumber;
    touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger > flexForReceiver;
    touchgfx::TextArea textForReceiver;
    touchgfx::Button buttonBack;

    /*
     * Wildcard Buffers
     */
    static const uint16_t AREAFORSMS_SIZE = 18;
    touchgfx::Unicode::UnicodeChar areaForSmsBuffer[AREAFORSMS_SIZE];
    static const uint16_t AREAFORRECEIVER_SIZE = 18;
    touchgfx::Unicode::UnicodeChar areaForReceiverBuffer[AREAFORRECEIVER_SIZE];

private:

    /*
     * Callback Declarations
     */
    touchgfx::Callback<SmsViewBase, const touchgfx::AbstractButton&> buttonCallback;
    touchgfx::Callback<SmsViewBase, const touchgfx::AbstractButtonContainer&> flexButtonCallback;

    /*
     * Callback Handler Declarations
     */
    void buttonCallbackHandler(const touchgfx::AbstractButton& src);
    void flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src);

};

#endif // SMSVIEWBASE_HPP

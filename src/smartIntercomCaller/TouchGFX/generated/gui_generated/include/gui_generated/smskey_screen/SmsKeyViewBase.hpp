/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef SMSKEYVIEWBASE_HPP
#define SMSKEYVIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/smskey_screen/SmsKeyPresenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/widgets/Image.hpp>
#include <touchgfx/containers/Container.hpp>
#include <touchgfx/widgets/Button.hpp>
#include <touchgfx/widgets/ButtonWithIcon.hpp>
#include <touchgfx/widgets/BoxWithBorder.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>
#include <touchgfx/containers/buttons/Buttons.hpp>
#include <touchgfx/widgets/TextArea.hpp>
#include <touchgfx/containers/clock/DigitalClock.hpp>

class SmsKeyViewBase : public touchgfx::View<SmsKeyPresenter>
{
public:
    SmsKeyViewBase();
    virtual ~SmsKeyViewBase() {}
    virtual void setupScreen();

    /*
     * Custom Actions
     */
    virtual void keyboardSelectedVar(uint8_t value);

    /*
     * Virtual Action Handlers
     */
    virtual void keyboardSelected(uint8_t value)
    {
        // Override and implement this function in SmsKey
    }

    virtual void getBuffer()
    {
        // Override and implement this function in SmsKey
    }

    virtual void clearBuffer()
    {
        // Override and implement this function in SmsKey
    }

    virtual void updateScreen()
    {
        // Override and implement this function in SmsKey
    }

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box __background;
    touchgfx::Image background;
    touchgfx::Container keyboardContainer;
    touchgfx::Button buttonBack;
    touchgfx::Button buttonConfirm;
    touchgfx::Container fill;
    touchgfx::Container forSms;
    touchgfx::Button buttonBackNumber;
    touchgfx::ButtonWithIcon buttonSms;
    touchgfx::BoxWithBorder backgroundForSms;
    touchgfx::TextAreaWithOneWildcard areaForSms;
    touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger > flexForSms;
    touchgfx::TextArea textSms;
    touchgfx::Container forNumber;
    touchgfx::Button buttonBackHome;
    touchgfx::ButtonWithIcon buttonSendNumber;
    touchgfx::BoxWithBorder backgroundForNumber;
    touchgfx::TextAreaWithOneWildcard areaForNumber;
    touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger > flexForNumber;
    touchgfx::TextArea textNumber;
    touchgfx::Container header;
    touchgfx::Box headerBackground;
    touchgfx::DigitalClock clock;
    touchgfx::TextArea nameOfPage;

    /*
     * Wildcard Buffers
     */
    static const uint16_t AREAFORSMS_SIZE = 18;
    touchgfx::Unicode::UnicodeChar areaForSmsBuffer[AREAFORSMS_SIZE];
    static const uint16_t AREAFORNUMBER_SIZE = 18;
    touchgfx::Unicode::UnicodeChar areaForNumberBuffer[AREAFORNUMBER_SIZE];

private:

    /*
     * Callback Declarations
     */
    touchgfx::Callback<SmsKeyViewBase, const touchgfx::AbstractButton&> buttonCallback;
    touchgfx::Callback<SmsKeyViewBase, const touchgfx::AbstractButtonContainer&> flexButtonCallback;

    /*
     * Callback Handler Declarations
     */
    void buttonCallbackHandler(const touchgfx::AbstractButton& src);
    void flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src);

};

#endif // SMSKEYVIEWBASE_HPP

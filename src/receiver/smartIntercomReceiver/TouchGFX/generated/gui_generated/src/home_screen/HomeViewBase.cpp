/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/home_screen/HomeViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>

HomeViewBase::HomeViewBase() :
    buttonCallback(this, &HomeViewBase::buttonCallbackHandler)
{

    __background.setPosition(0, 0, 480, 272);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));

    background.setXY(0, 0);
    background.setBitmap(touchgfx::Bitmap(BITMAP_DARK_BACKGROUNDS_MAIN_BG_TEXTURE_480X272PX_ID));

    silenceMode.setPosition(0, 0, 480, 272);
    silenceMode.setVisible(false);

    silenceBackground.setPosition(0, 0, 480, 272);
    silenceBackground.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    silenceBackground.setAlpha(150);
    silenceMode.add(silenceBackground);

    badTimeIcon.setXY(192, 88);
    badTimeIcon.setBitmap(touchgfx::Bitmap(BITMAP_OUTLINE_BEDTIME_BLACK_48DP_ID));
    silenceMode.add(badTimeIcon);

    head.setPosition(0, 0, 480, 50);

    headBackground.setPosition(0, 0, 480, 50);
    headBackground.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    headBackground.setAlpha(50);
    head.add(headBackground);

    clock.setPosition(0, 13, 80, 25);
    clock.setColor(touchgfx::Color::getColorFromRGB(14, 237, 237));
    clock.setTypedText(touchgfx::TypedText(T___SINGLEUSE_W287));
    clock.displayLeadingZeroForHourIndicator(false);
    clock.setDisplayMode(touchgfx::DigitalClock::DISPLAY_24_HOUR_NO_SECONDS);
    clock.setTime24Hour(9, 41, 0);
    head.add(clock);

    header.setXY(204, 10);
    header.setColor(touchgfx::Color::getColorFromRGB(14, 237, 237));
    header.setLinespacing(0);
    header.setTypedText(touchgfx::TypedText(T___SINGLEUSE_H1I2));
    head.add(header);

    body.setPosition(0, 70, 480, 100);

    doors.setPosition(360, 0, 120, 100);

    doorsText.setXY(31, 66);
    doorsText.setColor(touchgfx::Color::getColorFromRGB(14, 237, 237));
    doorsText.setLinespacing(0);
    doorsText.setTypedText(touchgfx::TypedText(T___SINGLEUSE_AIQO));
    doors.add(doorsText);

    doorsIcon.setXY(30, 6);
    doorsIcon.setBitmaps(touchgfx::Bitmap(BITMAP_DARK_BUTTONS_ROUND_EDGE_ICON_BUTTON_ID), touchgfx::Bitmap(BITMAP_DARK_BUTTONS_ROUND_EDGE_ICON_BUTTON_PRESSED_ID), touchgfx::Bitmap(BITMAP_OUTLINE_DOOR_BACK_BLACK_18DP_ID), touchgfx::Bitmap(BITMAP_OUTLINE_DOOR_BACK_BLACK_18DP_ID));
    doorsIcon.setIconXY(12, 12);
    doorsIcon.setAction(buttonCallback);
    doors.add(doorsIcon);
    body.add(doors);

    cameras.setPosition(240, 0, 120, 100);

    camerasText.setXY(16, 66);
    camerasText.setColor(touchgfx::Color::getColorFromRGB(14, 237, 237));
    camerasText.setLinespacing(0);
    camerasText.setTypedText(touchgfx::TypedText(T___SINGLEUSE_FXO9));
    cameras.add(camerasText);

    camerasIcon.setXY(30, 6);
    camerasIcon.setBitmaps(touchgfx::Bitmap(BITMAP_DARK_BUTTONS_ROUND_EDGE_ICON_BUTTON_ID), touchgfx::Bitmap(BITMAP_DARK_BUTTONS_ROUND_EDGE_ICON_BUTTON_PRESSED_ID), touchgfx::Bitmap(BITMAP_CAMERA_ID), touchgfx::Bitmap(BITMAP_CAMERA_ID));
    camerasIcon.setIconXY(12, 12);
    camerasIcon.setAction(buttonCallback);
    cameras.add(camerasIcon);
    body.add(cameras);

    recordings.setPosition(120, 0, 120, 100);

    recordingsText.setXY(5, 66);
    recordingsText.setColor(touchgfx::Color::getColorFromRGB(14, 237, 237));
    recordingsText.setLinespacing(0);
    recordingsText.setTypedText(touchgfx::TypedText(T___SINGLEUSE_PNJN));
    recordings.add(recordingsText);

    recordingsIcon.setXY(30, 6);
    recordingsIcon.setBitmaps(touchgfx::Bitmap(BITMAP_DARK_BUTTONS_ROUND_EDGE_ICON_BUTTON_ID), touchgfx::Bitmap(BITMAP_DARK_BUTTONS_ROUND_EDGE_ICON_BUTTON_PRESSED_ID), touchgfx::Bitmap(BITMAP_OUTLINE_LIST_ALT_BLACK_18DP_ID), touchgfx::Bitmap(BITMAP_OUTLINE_LIST_ALT_BLACK_18DP_ID));
    recordingsIcon.setIconXY(12, 12);
    recordingsIcon.setAction(buttonCallback);
    recordings.add(recordingsIcon);
    body.add(recordings);

    settings.setPosition(0, 0, 120, 100);

    settingsText.setXY(21, 66);
    settingsText.setColor(touchgfx::Color::getColorFromRGB(14, 237, 237));
    settingsText.setLinespacing(0);
    settingsText.setTypedText(touchgfx::TypedText(T___SINGLEUSE_97OY));
    settings.add(settingsText);

    settingsIcon.setXY(30, 6);
    settingsIcon.setBitmaps(touchgfx::Bitmap(BITMAP_DARK_BUTTONS_ROUND_EDGE_ICON_BUTTON_ID), touchgfx::Bitmap(BITMAP_DARK_BUTTONS_ROUND_EDGE_ICON_BUTTON_PRESSED_ID), touchgfx::Bitmap(BITMAP_OUTLINE_SETTINGS_BLACK_18DP_ID), touchgfx::Bitmap(BITMAP_OUTLINE_SETTINGS_BLACK_18DP_ID));
    settingsIcon.setIconXY(12, 12);
    settingsIcon.setAction(buttonCallback);
    settings.add(settingsIcon);
    body.add(settings);

    silencePanel.setPosition(115, 172, 250, 100);

    silenceText.setXY(53, 25);
    silenceText.setColor(touchgfx::Color::getColorFromRGB(14, 237, 237));
    silenceText.setLinespacing(0);
    silenceText.setTypedText(touchgfx::TypedText(T___SINGLEUSE_1QGA));
    silencePanel.add(silenceText);

    toggleSilence.setXY(77, 50);
    toggleSilence.setBitmaps(touchgfx::Bitmap(BITMAP_DARK_TOGGLEBARS_TOGGLE_RE_SMALL_BUTTON_OFF_ID), touchgfx::Bitmap(BITMAP_DARK_TOGGLEBARS_TOGGLE_RE_SMALL_BUTTON_ON_ID));
    toggleSilence.setAction(buttonCallback);
    silencePanel.add(toggleSilence);

    add(__background);
    add(background);
    add(silenceMode);
    add(head);
    add(body);
    add(silencePanel);
}

void HomeViewBase::setupScreen()
{

}

void HomeViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &doorsIcon)
    {
        //toDoors
        //When doorsIcon clicked change screen to Doors
        //Go to Doors with screen transition towards East
        application().gotoDoorsScreenSlideTransitionEast();
    }
    else if (&src == &camerasIcon)
    {
        //toCameras
        //When camerasIcon clicked change screen to Cameras
        //Go to Cameras with screen transition towards East
        application().gotoCamerasScreenSlideTransitionEast();
    }
    else if (&src == &recordingsIcon)
    {
        //toRecordings
        //When recordingsIcon clicked change screen to Recordings
        //Go to Recordings with screen transition towards East
        application().gotoRecordingsScreenSlideTransitionEast();
    }
    else if (&src == &settingsIcon)
    {
        //toSettings
        //When settingsIcon clicked change screen to Settings
        //Go to Settings with screen transition towards East
        application().gotoSettingsScreenSlideTransitionEast();
    }
    else if (&src == &toggleSilence)
    {
        //silenceMode
        //When toggleSilence clicked execute C++ code
        //Execute C++ code
        body.setVisible(!body.isVisible());
        body.invalidate();
        silenceMode.setVisible(!silenceMode.isVisible());
        silenceMode.invalidate();
    }
}

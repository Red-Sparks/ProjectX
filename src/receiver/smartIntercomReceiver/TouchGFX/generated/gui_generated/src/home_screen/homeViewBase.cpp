/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/home_screen/homeViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <texts/TextKeysAndLanguages.hpp>
#include <BitmapDatabase.hpp>

homeViewBase::homeViewBase() :
    buttonCallback(this, &homeViewBase::buttonCallbackHandler)
{

    __background.setPosition(0, 0, 480, 272);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));

    head.setPosition(0, 0, 480, 50);

    headBackground.setPosition(0, 0, 480, 50);
    headBackground.setColor(touchgfx::Color::getColorFromRGB(104, 237, 233));
    head.add(headBackground);

    clock.setPosition(0, 13, 80, 25);
    clock.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    clock.setTypedText(touchgfx::TypedText(T___SINGLEUSE_W287));
    clock.displayLeadingZeroForHourIndicator(false);
    clock.setDisplayMode(touchgfx::DigitalClock::DISPLAY_24_HOUR_NO_SECONDS);
    clock.setTime24Hour(9, 41, 0);
    head.add(clock);

    header.setXY(211, 13);
    header.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    header.setLinespacing(0);
    header.setTypedText(touchgfx::TypedText(T___SINGLEUSE_H1I2));
    head.add(header);

    body.setPosition(0, 50, 480, 222);

    bodyBackground.setPosition(0, 0, 480, 222);
    bodyBackground.setColor(touchgfx::Color::getColorFromRGB(162, 242, 240));
    body.add(bodyBackground);

    doors.setPosition(360, 22, 120, 100);

    doorsText.setXY(31, 66);
    doorsText.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    doorsText.setLinespacing(0);
    doorsText.setTypedText(touchgfx::TypedText(T___SINGLEUSE_AIQO));
    doors.add(doorsText);

    doorsIcon.setXY(30, 6);
    doorsIcon.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_ICON_BUTTON_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_ICON_BUTTON_PRESSED_ID), touchgfx::Bitmap(BITMAP_OUTLINE_DOOR_BACK_BLACK_18DP_ID), touchgfx::Bitmap(BITMAP_OUTLINE_DOOR_BACK_BLACK_18DP_ID));
    doorsIcon.setIconXY(12, 12);
    doorsIcon.setAction(buttonCallback);
    doors.add(doorsIcon);
    body.add(doors);

    cameras.setPosition(240, 22, 120, 100);

    camerasText.setXY(16, 66);
    camerasText.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    camerasText.setLinespacing(0);
    camerasText.setTypedText(touchgfx::TypedText(T___SINGLEUSE_FXO9));
    cameras.add(camerasText);

    camerasIcon.setXY(30, 6);
    camerasIcon.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_ICON_BUTTON_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_ICON_BUTTON_PRESSED_ID), touchgfx::Bitmap(BITMAP_CAMERA_ID), touchgfx::Bitmap(BITMAP_CAMERA_ID));
    camerasIcon.setIconXY(12, 12);
    camerasIcon.setAction(buttonCallback);
    cameras.add(camerasIcon);
    body.add(cameras);

    recordings.setPosition(120, 22, 120, 100);

    recordingsText.setXY(5, 66);
    recordingsText.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    recordingsText.setLinespacing(0);
    recordingsText.setTypedText(touchgfx::TypedText(T___SINGLEUSE_PNJN));
    recordings.add(recordingsText);

    recordingsIcon.setXY(30, 6);
    recordingsIcon.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_ICON_BUTTON_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_ICON_BUTTON_PRESSED_ID), touchgfx::Bitmap(BITMAP_OUTLINE_LIST_ALT_BLACK_18DP_ID), touchgfx::Bitmap(BITMAP_OUTLINE_LIST_ALT_BLACK_18DP_ID));
    recordingsIcon.setIconXY(12, 12);
    recordingsIcon.setAction(buttonCallback);
    recordings.add(recordingsIcon);
    body.add(recordings);

    settings.setPosition(0, 22, 120, 100);

    settingsText.setXY(21, 66);
    settingsText.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    settingsText.setLinespacing(0);
    settingsText.setTypedText(touchgfx::TypedText(T___SINGLEUSE_97OY));
    settings.add(settingsText);

    settingsIcon.setXY(30, 6);
    settingsIcon.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_ICON_BUTTON_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_ICON_BUTTON_PRESSED_ID), touchgfx::Bitmap(BITMAP_OUTLINE_SETTINGS_BLACK_18DP_ID), touchgfx::Bitmap(BITMAP_OUTLINE_SETTINGS_BLACK_18DP_ID));
    settingsIcon.setIconXY(12, 12);
    settingsIcon.setAction(buttonCallback);
    settings.add(settingsIcon);
    body.add(settings);

    silence.setPosition(115, 172, 250, 100);

    silenceText.setXY(53, 25);
    silenceText.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    silenceText.setLinespacing(0);
    silenceText.setTypedText(touchgfx::TypedText(T___SINGLEUSE_1QGA));
    silence.add(silenceText);

    silenceMod.setXY(61, 50);
    silenceMod.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_TOGGLEBARS_TOGGLE_RE_LARGE_BUTTON_OFF_ID), touchgfx::Bitmap(BITMAP_BLUE_TOGGLEBARS_TOGGLE_RE_LARGE_BUTTON_ON_ID));
    silenceMod.setAction(buttonCallback);
    silence.add(silenceMod);

    add(__background);
    add(head);
    add(body);
    add(silence);
}

void homeViewBase::setupScreen()
{

}

void homeViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &doorsIcon)
    {
        //homeToDoors
        //When doorsIcon clicked change screen to doors
        //Go to doors with no screen transition
        application().gotodoorsScreenNoTransition();
    }
    else if (&src == &camerasIcon)
    {
        //homeToCameras
        //When camerasIcon clicked change screen to cameras
        //Go to cameras with no screen transition
        application().gotocamerasScreenNoTransition();
    }
    else if (&src == &recordingsIcon)
    {
        //homeToRecordings
        //When recordingsIcon clicked change screen to recordings
        //Go to recordings with no screen transition
        application().gotorecordingsScreenNoTransition();
    }
    else if (&src == &settingsIcon)
    {
        //homeToSettings
        //When settingsIcon clicked change screen to settings
        //Go to settings with no screen transition
        application().gotosettingsScreenNoTransition();
    }
    else if (&src == &silenceMod)
    {
        //homeToSilence
        //When silenceMod clicked change screen to doNotDisturb
        //Go to doNotDisturb with no screen transition
        application().gotodoNotDisturbScreenNoTransition();
    }
}
